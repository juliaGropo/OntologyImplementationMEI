package org.ontology.tcc.entities;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Atividade <br>
 * @version generated on Sat Sep 15 16:28:32 BRT 2018 by Julia
 */

public interface Atividade extends WrappedIndividual {

    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#exceto
     */
     
    /**
     * Gets all property values for the exceto property.<p>
     * 
     * @returns a collection of values for the exceto property.
     */
    Collection<? extends WrappedIndividual> getExceto();

    /**
     * Checks if the class has a exceto property value.<p>
     * 
     * @return true if there is a exceto property value.
     */
    boolean hasExceto();

    /**
     * Adds a exceto property value.<p>
     * 
     * @param newExceto the exceto property value to be added
     */
    void addExceto(WrappedIndividual newExceto);

    /**
     * Removes a exceto property value.<p>
     * 
     * @param oldExceto the exceto property value to be removed.
     */
    void removeExceto(WrappedIndividual oldExceto);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#excetoCondicao
     */
     
    /**
     * Gets all property values for the excetoCondicao property.<p>
     * 
     * @returns a collection of values for the excetoCondicao property.
     */
    Collection<? extends AtividadeCondicao> getExcetoCondicao();

    /**
     * Checks if the class has a excetoCondicao property value.<p>
     * 
     * @return true if there is a excetoCondicao property value.
     */
    boolean hasExcetoCondicao();

    /**
     * Adds a excetoCondicao property value.<p>
     * 
     * @param newExcetoCondicao the excetoCondicao property value to be added
     */
    void addExcetoCondicao(AtividadeCondicao newExcetoCondicao);

    /**
     * Removes a excetoCondicao property value.<p>
     * 
     * @param oldExcetoCondicao the excetoCondicao property value to be removed.
     */
    void removeExcetoCondicao(AtividadeCondicao oldExcetoCondicao);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#excetoElemento
     */
     
    /**
     * Gets all property values for the excetoElemento property.<p>
     * 
     * @returns a collection of values for the excetoElemento property.
     */
    Collection<? extends AtividadeElemento> getExcetoElemento();

    /**
     * Checks if the class has a excetoElemento property value.<p>
     * 
     * @return true if there is a excetoElemento property value.
     */
    boolean hasExcetoElemento();

    /**
     * Adds a excetoElemento property value.<p>
     * 
     * @param newExcetoElemento the excetoElemento property value to be added
     */
    void addExcetoElemento(AtividadeElemento newExcetoElemento);

    /**
     * Removes a excetoElemento property value.<p>
     * 
     * @param oldExcetoElemento the excetoElemento property value to be removed.
     */
    void removeExcetoElemento(AtividadeElemento oldExcetoElemento);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#excetoRequisito
     */
     
    /**
     * Gets all property values for the excetoRequisito property.<p>
     * 
     * @returns a collection of values for the excetoRequisito property.
     */
    Collection<? extends AtividadeRequisito> getExcetoRequisito();

    /**
     * Checks if the class has a excetoRequisito property value.<p>
     * 
     * @return true if there is a excetoRequisito property value.
     */
    boolean hasExcetoRequisito();

    /**
     * Adds a excetoRequisito property value.<p>
     * 
     * @param newExcetoRequisito the excetoRequisito property value to be added
     */
    void addExcetoRequisito(AtividadeRequisito newExcetoRequisito);

    /**
     * Removes a excetoRequisito property value.<p>
     * 
     * @param oldExcetoRequisito the excetoRequisito property value to be removed.
     */
    void removeExcetoRequisito(AtividadeRequisito oldExcetoRequisito);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#permitidaPor
     */
     
    /**
     * Gets all property values for the permitidaPor property.<p>
     * 
     * @returns a collection of values for the permitidaPor property.
     */
    Collection<? extends Subclasse> getPermitidaPor();

    /**
     * Checks if the class has a permitidaPor property value.<p>
     * 
     * @return true if there is a permitidaPor property value.
     */
    boolean hasPermitidaPor();

    /**
     * Adds a permitidaPor property value.<p>
     * 
     * @param newPermitidaPor the permitidaPor property value to be added
     */
    void addPermitidaPor(Subclasse newPermitidaPor);

    /**
     * Removes a permitidaPor property value.<p>
     * 
     * @param oldPermitidaPor the permitidaPor property value to be removed.
     */
    void removePermitidaPor(Subclasse oldPermitidaPor);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#realizadaPor
     */
     
    /**
     * Gets all property values for the realizadaPor property.<p>
     * 
     * @returns a collection of values for the realizadaPor property.
     */
    Collection<? extends Ocupacao> getRealizadaPor();

    /**
     * Checks if the class has a realizadaPor property value.<p>
     * 
     * @return true if there is a realizadaPor property value.
     */
    boolean hasRealizadaPor();

    /**
     * Adds a realizadaPor property value.<p>
     * 
     * @param newRealizadaPor the realizadaPor property value to be added
     */
    void addRealizadaPor(Ocupacao newRealizadaPor);

    /**
     * Removes a realizadaPor property value.<p>
     * 
     * @param oldRealizadaPor the realizadaPor property value to be removed.
     */
    void removeRealizadaPor(Ocupacao oldRealizadaPor);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#temCondicao
     */
     
    /**
     * Gets all property values for the temCondicao property.<p>
     * 
     * @returns a collection of values for the temCondicao property.
     */
    Collection<? extends AtividadeCondicao> getTemCondicao();

    /**
     * Checks if the class has a temCondicao property value.<p>
     * 
     * @return true if there is a temCondicao property value.
     */
    boolean hasTemCondicao();

    /**
     * Adds a temCondicao property value.<p>
     * 
     * @param newTemCondicao the temCondicao property value to be added
     */
    void addTemCondicao(AtividadeCondicao newTemCondicao);

    /**
     * Removes a temCondicao property value.<p>
     * 
     * @param oldTemCondicao the temCondicao property value to be removed.
     */
    void removeTemCondicao(AtividadeCondicao oldTemCondicao);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#temCondicaoFinalidade
     */
     
    /**
     * Gets all property values for the temCondicaoFinalidade property.<p>
     * 
     * @returns a collection of values for the temCondicaoFinalidade property.
     */
    Collection<? extends AtividadeCondicaoFinalidade> getTemCondicaoFinalidade();

    /**
     * Checks if the class has a temCondicaoFinalidade property value.<p>
     * 
     * @return true if there is a temCondicaoFinalidade property value.
     */
    boolean hasTemCondicaoFinalidade();

    /**
     * Adds a temCondicaoFinalidade property value.<p>
     * 
     * @param newTemCondicaoFinalidade the temCondicaoFinalidade property value to be added
     */
    void addTemCondicaoFinalidade(AtividadeCondicaoFinalidade newTemCondicaoFinalidade);

    /**
     * Removes a temCondicaoFinalidade property value.<p>
     * 
     * @param oldTemCondicaoFinalidade the temCondicaoFinalidade property value to be removed.
     */
    void removeTemCondicaoFinalidade(AtividadeCondicaoFinalidade oldTemCondicaoFinalidade);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#temCondicaoLocal
     */
     
    /**
     * Gets all property values for the temCondicaoLocal property.<p>
     * 
     * @returns a collection of values for the temCondicaoLocal property.
     */
    Collection<? extends AtividadeCondicaoLocal> getTemCondicaoLocal();

    /**
     * Checks if the class has a temCondicaoLocal property value.<p>
     * 
     * @return true if there is a temCondicaoLocal property value.
     */
    boolean hasTemCondicaoLocal();

    /**
     * Adds a temCondicaoLocal property value.<p>
     * 
     * @param newTemCondicaoLocal the temCondicaoLocal property value to be added
     */
    void addTemCondicaoLocal(AtividadeCondicaoLocal newTemCondicaoLocal);

    /**
     * Removes a temCondicaoLocal property value.<p>
     * 
     * @param oldTemCondicaoLocal the temCondicaoLocal property value to be removed.
     */
    void removeTemCondicaoLocal(AtividadeCondicaoLocal oldTemCondicaoLocal);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#temCondicaoProduto
     */
     
    /**
     * Gets all property values for the temCondicaoProduto property.<p>
     * 
     * @returns a collection of values for the temCondicaoProduto property.
     */
    Collection<? extends AtividadeCondicaoProduto> getTemCondicaoProduto();

    /**
     * Checks if the class has a temCondicaoProduto property value.<p>
     * 
     * @return true if there is a temCondicaoProduto property value.
     */
    boolean hasTemCondicaoProduto();

    /**
     * Adds a temCondicaoProduto property value.<p>
     * 
     * @param newTemCondicaoProduto the temCondicaoProduto property value to be added
     */
    void addTemCondicaoProduto(AtividadeCondicaoProduto newTemCondicaoProduto);

    /**
     * Removes a temCondicaoProduto property value.<p>
     * 
     * @param oldTemCondicaoProduto the temCondicaoProduto property value to be removed.
     */
    void removeTemCondicaoProduto(AtividadeCondicaoProduto oldTemCondicaoProduto);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#temCondicaoServico
     */
     
    /**
     * Gets all property values for the temCondicaoServico property.<p>
     * 
     * @returns a collection of values for the temCondicaoServico property.
     */
    Collection<? extends AtividadeCondicaoServico> getTemCondicaoServico();

    /**
     * Checks if the class has a temCondicaoServico property value.<p>
     * 
     * @return true if there is a temCondicaoServico property value.
     */
    boolean hasTemCondicaoServico();

    /**
     * Adds a temCondicaoServico property value.<p>
     * 
     * @param newTemCondicaoServico the temCondicaoServico property value to be added
     */
    void addTemCondicaoServico(AtividadeCondicaoServico newTemCondicaoServico);

    /**
     * Removes a temCondicaoServico property value.<p>
     * 
     * @param oldTemCondicaoServico the temCondicaoServico property value to be removed.
     */
    void removeTemCondicaoServico(AtividadeCondicaoServico oldTemCondicaoServico);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#atividadeDescricao
     */
     
    /**
     * Gets all property values for the atividadeDescricao property.<p>
     * 
     * @returns a collection of values for the atividadeDescricao property.
     */
    Collection<? extends String> getAtividadeDescricao();

    /**
     * Checks if the class has a atividadeDescricao property value.<p>
     * 
     * @return true if there is a atividadeDescricao property value.
     */
    boolean hasAtividadeDescricao();

    /**
     * Adds a atividadeDescricao property value.<p>
     * 
     * @param newAtividadeDescricao the atividadeDescricao property value to be added
     */
    void addAtividadeDescricao(String newAtividadeDescricao);

    /**
     * Removes a atividadeDescricao property value.<p>
     * 
     * @param oldAtividadeDescricao the atividadeDescricao property value to be removed.
     */
    void removeAtividadeDescricao(String oldAtividadeDescricao);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
