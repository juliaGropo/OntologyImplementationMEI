package org.ontology.tcc.entities;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: AtividadeRequisitoFinalidadeDefinitivo <br>
 * @version generated on Sat Sep 15 16:28:33 BRT 2018 by Julia
 */

public interface AtividadeRequisitoFinalidadeDefinitivo extends AtividadeRequisitoDefinitivo {

    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#elementoTidoPor
     */
     
    /**
     * Gets all property values for the elementoTidoPor property.<p>
     * 
     * @returns a collection of values for the elementoTidoPor property.
     */
    Collection<? extends WrappedIndividual> getElementoTidoPor();

    /**
     * Checks if the class has a elementoTidoPor property value.<p>
     * 
     * @return true if there is a elementoTidoPor property value.
     */
    boolean hasElementoTidoPor();

    /**
     * Adds a elementoTidoPor property value.<p>
     * 
     * @param newElementoTidoPor the elementoTidoPor property value to be added
     */
    void addElementoTidoPor(WrappedIndividual newElementoTidoPor);

    /**
     * Removes a elementoTidoPor property value.<p>
     * 
     * @param oldElementoTidoPor the elementoTidoPor property value to be removed.
     */
    void removeElementoTidoPor(WrappedIndividual oldElementoTidoPor);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#especificoPara
     */
     
    /**
     * Gets all property values for the especificoPara property.<p>
     * 
     * @returns a collection of values for the especificoPara property.
     */
    Collection<? extends AtividadeElemento> getEspecificoPara();

    /**
     * Checks if the class has a especificoPara property value.<p>
     * 
     * @return true if there is a especificoPara property value.
     */
    boolean hasEspecificoPara();

    /**
     * Adds a especificoPara property value.<p>
     * 
     * @param newEspecificoPara the especificoPara property value to be added
     */
    void addEspecificoPara(AtividadeElemento newEspecificoPara);

    /**
     * Removes a especificoPara property value.<p>
     * 
     * @param oldEspecificoPara the especificoPara property value to be removed.
     */
    void removeEspecificoPara(AtividadeElemento oldEspecificoPara);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#genericoPara
     */
     
    /**
     * Gets all property values for the genericoPara property.<p>
     * 
     * @returns a collection of values for the genericoPara property.
     */
    Collection<? extends AtividadeElemento> getGenericoPara();

    /**
     * Checks if the class has a genericoPara property value.<p>
     * 
     * @return true if there is a genericoPara property value.
     */
    boolean hasGenericoPara();

    /**
     * Adds a genericoPara property value.<p>
     * 
     * @param newGenericoPara the genericoPara property value to be added
     */
    void addGenericoPara(AtividadeElemento newGenericoPara);

    /**
     * Removes a genericoPara property value.<p>
     * 
     * @param oldGenericoPara the genericoPara property value to be removed.
     */
    void removeGenericoPara(AtividadeElemento oldGenericoPara);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#requisitoDefinitivoTidoPor
     */
     
    /**
     * Gets all property values for the requisitoDefinitivoTidoPor property.<p>
     * 
     * @returns a collection of values for the requisitoDefinitivoTidoPor property.
     */
    Collection<? extends AtividadeCondicao> getRequisitoDefinitivoTidoPor();

    /**
     * Checks if the class has a requisitoDefinitivoTidoPor property value.<p>
     * 
     * @return true if there is a requisitoDefinitivoTidoPor property value.
     */
    boolean hasRequisitoDefinitivoTidoPor();

    /**
     * Adds a requisitoDefinitivoTidoPor property value.<p>
     * 
     * @param newRequisitoDefinitivoTidoPor the requisitoDefinitivoTidoPor property value to be added
     */
    void addRequisitoDefinitivoTidoPor(AtividadeCondicao newRequisitoDefinitivoTidoPor);

    /**
     * Removes a requisitoDefinitivoTidoPor property value.<p>
     * 
     * @param oldRequisitoDefinitivoTidoPor the requisitoDefinitivoTidoPor property value to be removed.
     */
    void removeRequisitoDefinitivoTidoPor(AtividadeCondicao oldRequisitoDefinitivoTidoPor);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#requisitoFinalidadeDefinitivoTidoPor
     */
     
    /**
     * Gets all property values for the requisitoFinalidadeDefinitivoTidoPor property.<p>
     * 
     * @returns a collection of values for the requisitoFinalidadeDefinitivoTidoPor property.
     */
    Collection<? extends AtividadeCondicaoFinalidade> getRequisitoFinalidadeDefinitivoTidoPor();

    /**
     * Checks if the class has a requisitoFinalidadeDefinitivoTidoPor property value.<p>
     * 
     * @return true if there is a requisitoFinalidadeDefinitivoTidoPor property value.
     */
    boolean hasRequisitoFinalidadeDefinitivoTidoPor();

    /**
     * Adds a requisitoFinalidadeDefinitivoTidoPor property value.<p>
     * 
     * @param newRequisitoFinalidadeDefinitivoTidoPor the requisitoFinalidadeDefinitivoTidoPor property value to be added
     */
    void addRequisitoFinalidadeDefinitivoTidoPor(AtividadeCondicaoFinalidade newRequisitoFinalidadeDefinitivoTidoPor);

    /**
     * Removes a requisitoFinalidadeDefinitivoTidoPor property value.<p>
     * 
     * @param oldRequisitoFinalidadeDefinitivoTidoPor the requisitoFinalidadeDefinitivoTidoPor property value to be removed.
     */
    void removeRequisitoFinalidadeDefinitivoTidoPor(AtividadeCondicaoFinalidade oldRequisitoFinalidadeDefinitivoTidoPor);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#requisitoSatisfeitoPor
     */
     
    /**
     * Gets all property values for the requisitoSatisfeitoPor property.<p>
     * 
     * @returns a collection of values for the requisitoSatisfeitoPor property.
     */
    Collection<? extends WrappedIndividual> getRequisitoSatisfeitoPor();

    /**
     * Checks if the class has a requisitoSatisfeitoPor property value.<p>
     * 
     * @return true if there is a requisitoSatisfeitoPor property value.
     */
    boolean hasRequisitoSatisfeitoPor();

    /**
     * Adds a requisitoSatisfeitoPor property value.<p>
     * 
     * @param newRequisitoSatisfeitoPor the requisitoSatisfeitoPor property value to be added
     */
    void addRequisitoSatisfeitoPor(WrappedIndividual newRequisitoSatisfeitoPor);

    /**
     * Removes a requisitoSatisfeitoPor property value.<p>
     * 
     * @param oldRequisitoSatisfeitoPor the requisitoSatisfeitoPor property value to be removed.
     */
    void removeRequisitoSatisfeitoPor(WrappedIndividual oldRequisitoSatisfeitoPor);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#requisitoTidoPor
     */
     
    /**
     * Gets all property values for the requisitoTidoPor property.<p>
     * 
     * @returns a collection of values for the requisitoTidoPor property.
     */
    Collection<? extends AtividadeCondicao> getRequisitoTidoPor();

    /**
     * Checks if the class has a requisitoTidoPor property value.<p>
     * 
     * @return true if there is a requisitoTidoPor property value.
     */
    boolean hasRequisitoTidoPor();

    /**
     * Adds a requisitoTidoPor property value.<p>
     * 
     * @param newRequisitoTidoPor the requisitoTidoPor property value to be added
     */
    void addRequisitoTidoPor(AtividadeCondicao newRequisitoTidoPor);

    /**
     * Removes a requisitoTidoPor property value.<p>
     * 
     * @param oldRequisitoTidoPor the requisitoTidoPor property value to be removed.
     */
    void removeRequisitoTidoPor(AtividadeCondicao oldRequisitoTidoPor);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#satisfazCondicao
     */
     
    /**
     * Gets all property values for the satisfazCondicao property.<p>
     * 
     * @returns a collection of values for the satisfazCondicao property.
     */
    Collection<? extends AtividadeCondicao> getSatisfazCondicao();

    /**
     * Checks if the class has a satisfazCondicao property value.<p>
     * 
     * @return true if there is a satisfazCondicao property value.
     */
    boolean hasSatisfazCondicao();

    /**
     * Adds a satisfazCondicao property value.<p>
     * 
     * @param newSatisfazCondicao the satisfazCondicao property value to be added
     */
    void addSatisfazCondicao(AtividadeCondicao newSatisfazCondicao);

    /**
     * Removes a satisfazCondicao property value.<p>
     * 
     * @param oldSatisfazCondicao the satisfazCondicao property value to be removed.
     */
    void removeSatisfazCondicao(AtividadeCondicao oldSatisfazCondicao);


    /* ***************************************************
     * Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#atividadeElementoDescricao
     */
     
    /**
     * Gets all property values for the atividadeElementoDescricao property.<p>
     * 
     * @returns a collection of values for the atividadeElementoDescricao property.
     */
    Collection<? extends String> getAtividadeElementoDescricao();

    /**
     * Checks if the class has a atividadeElementoDescricao property value.<p>
     * 
     * @return true if there is a atividadeElementoDescricao property value.
     */
    boolean hasAtividadeElementoDescricao();

    /**
     * Adds a atividadeElementoDescricao property value.<p>
     * 
     * @param newAtividadeElementoDescricao the atividadeElementoDescricao property value to be added
     */
    void addAtividadeElementoDescricao(String newAtividadeElementoDescricao);

    /**
     * Removes a atividadeElementoDescricao property value.<p>
     * 
     * @param oldAtividadeElementoDescricao the atividadeElementoDescricao property value to be removed.
     */
    void removeAtividadeElementoDescricao(String oldAtividadeElementoDescricao);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
