package org.ontology.tcc.entities.impl;

import org.ontology.tcc.entities.*;


import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultOcupacao <br>
 * @version generated on Sat Sep 15 16:28:35 BRT 2018 by Julia
 */
public class DefaultOcupacao extends WrappedIndividualImpl implements Ocupacao {

    public DefaultOcupacao(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#realiza
     */
     
    public Collection<? extends Atividade> getRealiza() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_REALIZA,
                                               DefaultAtividade.class);
    }

    public boolean hasRealiza() {
	   return !getRealiza().isEmpty();
    }

    public void addRealiza(Atividade newRealiza) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_REALIZA,
                                       newRealiza);
    }

    public void removeRealiza(Atividade oldRealiza) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_REALIZA,
                                          oldRealiza);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/gabriel/ontologies/2017/8/mei#ocupacaoNome
     */
     
    public Collection<? extends String> getOcupacaoNome() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_OCUPACAONOME, String.class);
    }

    public boolean hasOcupacaoNome() {
		return !getOcupacaoNome().isEmpty();
    }

    public void addOcupacaoNome(String newOcupacaoNome) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_OCUPACAONOME, newOcupacaoNome);
    }

    public void removeOcupacaoNome(String oldOcupacaoNome) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_OCUPACAONOME, oldOcupacaoNome);
    }


}
